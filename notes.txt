my prototype is using the patch "larger-no-multibuffer.maxpat"

need to add this Sample message to patch
look down below for Sam ideas


todo

sample triggering by message instead of param?


projectile launch could launch sample?
or many diff color cubes could spawn, each with different sample


todo:

switch from sending strings to sending basic numeric types



UNITY RNBO plan


use presets in there for different rooms!


-Share simple version on forum, invite discussion
-Ask about the noise bursts? can i repro by moving the [*~] around while audio is playing?



Workflow template:


I've broken it down into 4 phases (with a phase 0) based on the different types of programming needed. In the actual workflow document, of course, I'll go more in depth into each of these points. I'll also start with some friendly introduction and list the various types of tools (html, js, c#, RNBO, some sort of server) up front so that folks know what they are getting themselves into.


Phase 0 (Tips to avoid pain):

-be testing on https, due to audio in the browser and also TLS issues
-make sure to include an opt-in from the user to audio in your javascript, or browsers like chrome won't let your audio start
-if you are using a local testing server, you might have issues with its configuration (especially with compressed js files using gzip)
-i'm using Unity 2020.3.x
-don't use .aif, chrome won't be happy. use .wav or .mp3

Phase I (RNBO phase):

RNBO -> JSON export
-include presets if you are going to use them
-include samples if you are going to use them

Phase II (Javascript/C# phase):

-set up a js file (or include as a script in index.html) that creates the RNBO device and audioContext

Javascript -> .jslib file
-get any js function that you need to call from unity into this plugin format

C# scripts that call the .jslib functions import use DLL etc 

Phase III (Unity Phase):

Unity -> WebGL build (with compression disabled? I'll confirm this)

Phase IV (HTML phase):

index.html generated by the WebGL build
-needs link to @rnbo/js script [digital ocean spaces or npm install]
-needs Build and TemplateData folders and the correct unity build files linked
-needs your javascript, with the functions that have been called in C# with .jslib's help

Now you are connected!

part 2? 

samples
presets 











Sam stuff:

instead of having different functions for sending values of different kinds from C# to different places in JS,
have one fxn in jslib that takes a param and a value as arguments


in js





const scalers = {
    freq: (f) => { return f * 15}
};

function updateParamWithString(paramName, str) {
    let param = myDevice.getParamById(paramName);
    let val = Number.parseFloat(str);
    if (scalers[paramName]) val = scalers[paramName](val); 
    if (param) param.value = val;
}




in jslib



setParamWithString: function(param, utf8String) {
    updateParamWithString();
  },


setParamWithFloat: function(param, float) {
    updateParamWithFloat();
},